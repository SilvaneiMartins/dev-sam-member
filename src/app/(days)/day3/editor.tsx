import { Stack } from 'expo-router';
import React, { useState } from 'react';
import { View, Text, StyleSheet, TextInput, Pressable } from 'react-native';

import MarkdownDisplay from '@components/MarkdownDisplay';

const template = `# üéâ Divers√£o com Markdown!

## üöÄ Introdu√ß√£o
Bem-vindo a este guia de descontos **divertido e emocionante**! Vamos mergulhar no mundo do Markdown e descobrir como ele torna a formata√ß√£o de texto f√°cil e interessante!

## üéà No√ß√µes b√°sicas: adicione um pouco de talento

- **Ousado e bonito:** Fa√ßa seu texto se destacar! Utilize \`**\` ou \`__\`. Exemplo: **Olhe para mim!**
- *It√°lico Sassy:* Adicione uma inclina√ß√£o com \`*\` ou \`_\`. Exemplo: *Estou inclinado!*

### üçî Vamos listar algumas coisas divertidas!

1. üåü Observando estrelas
2. üèñ Festas na praia
3. üçï Noites de pizza

- üéÆ Videogames
- üìö Lendo um bom livro
- üßò Hora de ioga

## üåà Divers√£o Avan√ßada

### üñº Adicionando imagens e links

Sam Develop:

![Meu Reposit√≥rio](https://github.com/silvaneimartins.png)

Visite meu portfolio: [Silvanei Martins](https:silvaneimartins.com.br)

### üé∂ Festa do Bloco de C√≥digo


\`\`\`javascript
// Truque de festa JavaScript
fun√ß√£o festaHora() {
     console.log("Vamos dan√ßar üíÉüï∫!");
}
\`\`\`

## üé§ Conclus√£o
Markdown n√£o serve apenas para formata√ß√£o; √© para se divertir enquanto se expressa! Continue explorando e aproveite a festa de descontos! üéä

> Divirta-se criando seus pr√≥prios documentos divertidos de desconto! üé®üéâ

`;

const EditorScreen = () => {
    const [content, setContent] = useState(template);
    const [tab, setTab] = useState('edit');

    return (
        <View style={styles.page}>
            <Stack.Screen
                options={{
                    title: 'Editor Markdown',
                }}
            />
            <View style={styles.tabsContainer}>
                <Pressable
                    onPress={() => setTab('edit')}
                    style={[
                        styles.tab,
                        { borderColor: tab === 'edit' ? 'red' : 'gray' },
                    ]}
                >
                    <Text style={styles.tabText}>Editar</Text>
                </Pressable>
                <Pressable
                    onPress={() => setTab('preview')}
                    style={[
                        styles.tab,
                        { borderColor: tab === 'preview' ? 'red' : 'gray' },
                    ]}
                >
                    <Text style={styles.tabText}>Visualiza√ß√£o</Text>
                </Pressable>
            </View>

            {tab === 'edit' ? (
                <TextInput
                    multiline
                    value={content}
                    numberOfLines={50}
                    style={styles.input}
                    onChangeText={setContent}
                />
            ) : (
                <MarkdownDisplay>{content}</MarkdownDisplay>
            )}
        </View>
    );
};

const styles = StyleSheet.create({
    page: {
        flex: 1,
        padding: 10,
        backgroundColor: 'whitesmoke',
    },
    input: {
        flex: 1,
        padding: 20,
        fontSize: 16,
        paddingTop: 20,
        borderRadius: 10,
        backgroundColor: 'white',
    },
    tabsContainer: {
        gap: 10,
        marginVertical: 10,
        flexDirection: 'row',
    },
    tab: {
        flex: 1,
        padding: 10,
        borderWidth: 2,
        borderRadius: 10,
        borderColor: 'gray',
        alignItems: 'center',
    },
    tabText: {
        fontFamily: 'InterBold',
    },
});

export default EditorScreen;
